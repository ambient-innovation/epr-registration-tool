apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "epr-tool.fullname" . }}-backend
  labels: # Every kubernetes object needs to have some common labels as shown below. If you are going to create new kubernetes object from scratch, please add these labels accordingly.
    app.kubernetes.io/name: {{ include "epr-tool.name" . }}-backend # Keep this label consistent with name metadata. You will most likely need to forecast "workshop" part according to _helpers.tpl file.
    helm.sh/chart: {{ include "epr-tool.chart" . }} # You would most likely only forecast "workshop" part accordingly to how it is named in _helpers.tpl file.
    app.kubernetes.io/instance: {{ .Release.Name }} # This is same for every kubernetes object. Do not forecast.
    app.kubernetes.io/managed-by: {{ .Release.Service }} # This is same for every kubernetes object. Do not forecast.
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "epr-tool.name" . }}-backend
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "epr-tool.name" . }}-backend
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{ if $.Values.backend.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.backend.serviceAccount.serviceAccountName }}
      {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: FORCE_RESTART_AT
              value: {{ .Values.forceRestartAt | quote }}
          envFrom:
            - configMapRef:
                name: {{ include "epr-tool.fullname" . }}-backend
                optional: false
            - secretRef:
                name: {{ include "epr-tool.fullname" . }}-backend
                optional: false
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          {{ if $.Values.awsSecretManager.enabled }}
          volumeMounts:
            - name: aws-backend-secret
              mountPath: "/mnt/secrets-store"
              readOnly: true
          {{ end }}
      {{ if $.Values.awsSecretManager.enabled }}
      volumes:
        - name: backend-secret
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "epr-tool.fullname" . }}-backend
      {{ end }}
      imagePullSecrets:
        - name: ai-registry
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                      - {{ include "epr-tool.name" $ }}-backend
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - {{ $.Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
