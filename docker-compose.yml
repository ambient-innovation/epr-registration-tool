version: "3.3"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    depends_on:
      - db
      - mailhog
    container_name: epr_tool_backend
    env_file: ./backend/.env.development
    volumes:
      - ./backend/:/app
    ports:
      - "8000:8000"
    restart: "no"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: epr_tool_frontend
    # this env variable is needed for the server side request, as we use here the dev build
    environment:
      - BACKEND_URL=http://backend:8000/
    volumes:
      - ./frontend:/app
      - /app/node_modules/
    ports:
      - "3000:3000"
    restart: "no"

  db:
    image: library/postgres:14-alpine
    container_name: epr_tool_db
    environment:
      POSTGRES_DB: epr-tool
      POSTGRES_USER: epr-tool
      POSTGRES_PASSWORD: top-secret
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: "no"

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: epr_tool_mailhog
    ports:
      - "8025:8025"  # email inbox interface
      - "1025:1025"  # smtp

  # Setup for e2e testing
  e2efrontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # we need to provide here the host network as requests to the backend need to be done to fetch and generate CMS
      # pages while build
      network: host
      target: test
    container_name: epr_tool_frontend_e2e
    volumes:
      - ./frontend:/app
      - /app/node_modules/
      - /app/.next
    ports:
      - "3000:3000"
    restart: "no"

  e2ebackend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: epr_tool_backend_e2e
    command: "./scripts/run_e2e.sh"
    env_file: ./backend/.env.e2e
    volumes:
      - ./backend/:/app
    ports:
      - "8000:8000"
    restart: "no"

volumes:
  postgres_data:
