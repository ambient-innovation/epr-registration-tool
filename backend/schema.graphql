input CompanyContactInfoInput {
  country: String!
  postalCode: String
  city: String!
  street: String!
  streetNumber: String
  additionalAddressInfo: String
  phoneNumber: String!
}

type CompanyContactInfoType {
  country: String!
  postalCode: String
  city: String!
  street: String!
  streetNumber: String
  phoneNumber: String!
  additionalAddressInfo: String
}

input CompanyInput {
  name: String!
  distributorType: DistributorType!
  identificationNumber: String
}

type CompanyType {
  id: ID!
  name: String!
  registrationNumber: String!
  distributorType: DistributorType!
  lastmodifiedAt: DateTime!
  createdAt: DateTime!
  identificationNumber: String!
  isProfileCompleted: Boolean!
  contactInfo(pk: ID): CompanyContactInfoType
  logo: ImageType
}

"""Date with time (isoformat)"""
scalar DateTime

"""Decimal (fixed-point)"""
scalar Decimal

enum DistributorType {
  IMPORTER
  LOCAL_PRODUCER
}

type DjangoFileType {
  name: String!
  path: String!
  size: Int!
  url: String!
}

type EmailChangeRequestType {
  email: String!
  createdAt: DateTime!
  isValid: Boolean!
}

type FinalSubmissionType {
  id: ID!
  fees: Float!
  materialRecords: [MaterialRecordType!]!
}

type ForecastSubmissionType {
  id: ID!
  materialRecords: [MaterialRecordType!]!
}

type ImageType {
  name: String!
  size: Int!
  url: String!
  width: Int!
  height: Int!
}

enum LanguageEnum {
  en
  ar
}

input MaterialInput {
  materialId: ID!
  quantity: Decimal!
}

type MaterialRecordType {
  id: ID!
  quantity: Float!
  material: MaterialType!
  packagingGroup: PackagingGroupType!
}

type MaterialType {
  id: ID!
  name: String!
}

type Mutation {
  changeLanguage(languageCode: LanguageEnum!): String!
  changePassword(oldPassword: String!, newPassword: String!): String!
  changeAccount(accountData: UserChangeInputType!): String!
  registerCompany(companyName: String!, companyDistributorType: DistributorType!, userEmail: String!, userTitle: String!, userFullName: String!, userPosition: String!, userPhoneOrMobile: String!, password: String!, countryCode: String!): String!
  changeCompanyDetails(companyInput: CompanyInput!, contactInfoInput: CompanyContactInfoInput!): String!
  changeCompanyLogo(file: Upload = null): String!
  packagingReportForecastSubmit(timeframe: TimeframeType!, year: Int!, startMonth: Int!, tzInfo: String!, packagingRecords: [PackagingGroupInput!]!): String!
  packagingReportFinalDataSubmit(packagingReportId: ID!, packagingRecords: [PackagingGroupInput!]!): String!
  packagingReportForecastUpdate(packagingReportId: ID!, packagingRecords: [PackagingGroupInput!]!): String!
}

input PackagingGroupInput {
  packagingGroupId: ID!
  materialRecords: [MaterialInput!]!
}

type PackagingGroupType {
  id: ID!
  name: String!
}

type PackagingReportType {
  id: ID!
  timeframe: TimeframeType!
  year: Int!
  startMonth: Int!
  timezoneInfo: String!
  createdAt: DateTime!
  endDatetime: DateTime!
  fees: Decimal
  finalReport: FinalSubmissionType
  forecast: ForecastSubmissionType
  invoiceFile: DjangoFileType
  isFinalReportSubmitted: Boolean!
  isForecastEditable: Boolean!
  packagingGroupsCount: Int!
}

type PackagingReportTypePaginationResult {
  items: [PackagingReportType!]!
  pageInfo: PaginatorType!
}

input PackagingReportsFilterInput {
  year: Int
}

enum PackagingReportsSortingOption {
  NEWEST_FIRST
  OLDEST_FIRST
}

input PaginationInput {
  page: Int!
  limit: Int!
}

type PaginatorType {
  perPage: Int!
  currentPage: Int!
  numPages: Int!
  totalCount: Int!
  hasNextPage: Boolean!
}

type Query {
  me: UserType
  companyDetails: CompanyType
  packagingGroups: [PackagingGroupType!]!
  packagingMaterials: [MaterialType!]!
  packagingReportFeesEstimation(timeframe: TimeframeType!, year: Int!, startMonth: Int!, packagingRecords: [PackagingGroupInput!]!): Decimal!
  packagingReports(pagination: PaginationInput = null, filter: PackagingReportsFilterInput = null, sorting: PackagingReportsSortingOption = NEWEST_FIRST): PackagingReportTypePaginationResult!
  packagingReportForecastDetails(packagingReportId: ID!): PackagingReportType
  packagingReportFinalDetails(packagingReportId: ID!): PackagingReportType
  helloWorld: String!
}

enum TimeframeType {
  MONTH
  THREE_MONTHS
  TWELVE_MONTHS
}

scalar Upload

input UserChangeInputType {
  email: String!
  title: String
  fullName: String!
  position: String
  phoneOrMobile: String
}

type UserType {
  id: ID!
  email: String!
  title: String!
  fullName: String!
  phoneOrMobile: String!
  position: String!
  languagePreference: LanguageEnum!
  emailChangeRequest: EmailChangeRequestType
}
