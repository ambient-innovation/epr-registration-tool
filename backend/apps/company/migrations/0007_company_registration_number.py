# Generated by Django 4.0.4 on 2022-07-20 07:08
from django.core import validators
from django.db import migrations, models

from company.utils import generate_registration_number


def populate_registration_numbers(apps, schema_editor):
    """
    Generate registration number for each existing company
    """
    Company = apps.get_model('company', 'Company')
    all_companies = Company.objects.all()

    for company in all_companies:
        company.registration_number = generate_registration_number(company.country_code)

    Company.objects.bulk_update(
        all_companies,
        fields=('registration_number',),
    )


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0006_company_country_code'),
    ]

    operations = [
        # --- add nullable field ---
        migrations.AddField(
            model_name='company',
            name='registration_number',
            field=models.CharField(
                null=True,
                max_length=12,
            ),
        ),
        # --- populate existing rows ---
        migrations.RunPython(populate_registration_numbers, migrations.RunPython.noop),
        # --- make column non-nullable + unique ---
        migrations.AlterField(
            model_name='company',
            name='registration_number',
            field=models.CharField(
                verbose_name='Registration number',
                help_text=(
                    'Unique internal identification number that each company receives after registering.'
                    '<br>This number is generated by the system.'
                ),
                max_length=12,
                validators=[validators.MinLengthValidator(12)],
                db_index=True,
                unique=True,
            ),
        ),
    ]
