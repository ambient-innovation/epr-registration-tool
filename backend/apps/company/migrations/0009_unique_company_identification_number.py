# Generated by Django 4.0.4 on 2022-08-23 11:37

from django.db import migrations, models

import company.validators


def make_identification_numbers_unique(apps, schema_editor):
    """
    Make sure existing identification numbers are unique
    """
    Company = apps.get_model('company', 'Company')
    all_companies = Company.objects.all()

    print(' Checking uniqueness...', end='')

    conflicts_count = 0

    for c in all_companies:
        identification_number = c.identification_number

        while Company.objects.filter(identification_number=identification_number).exclude(id=c.id).exists():
            identification_number = identification_number + '0'  # append 1 to existing id

        if identification_number != c.identification_number:
            conflicts_count += 1
            c.identification_number = identification_number
            c.save()
            print(f' ðŸ’¥{c.id}', end='')

    if conflicts_count:
        print(' fixed ðŸ”¨ ', end='')
    else:
        print(' âœ… ', end='')


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0008_add_additional_invoice_recipient'),
    ]

    operations = [
        migrations.RunPython(make_identification_numbers_unique, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='company',
            name='identification_number',
            field=models.CharField(
                blank=True,
                help_text='National identification number',
                max_length=255,
                unique=True,
                validators=[company.validators.validate_string_without_whitespaces],
                verbose_name='VAT / tax number',
            ),
        ),
    ]
